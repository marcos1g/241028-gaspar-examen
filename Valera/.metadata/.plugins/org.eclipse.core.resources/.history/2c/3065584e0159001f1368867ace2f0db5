

import jakarta.servlet.ServletException;
import java.io.File;
import java.io.FileInputStream;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import com.google.gson.Gson;
import java.sql.*;
import java.util.List;
import java.util.ArrayList;

/**
 * Servlet implementation class Nose
 */
@WebServlet("/Nose")
public class Nose extends HttpServlet {
	List<Product> products = new ArrayList<>();
	Connection conn;
    PreparedStatement stmt;
    ResultSet rs;

    conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/mp_arg", "root", "");

	private static final long serialVersionUID = 1L;

    /**
     * Default constructor. 
     */
    public Nose() {
    	super();
        // TODO Auto-generated constructor stub
    }

    public String Productos() {
    	String sql= "select * from productos";
        rs = stmt.executeQuery();
        while (rs.next()) {
            // Obtén los datos de cada columna
            int id = rs.getInt("id");
            String name = rs.getString("nombre");
            double price = rs.getDouble("precio");

            // Crea un objeto Product y añádelo a la lista
            Product product = new Product(id, name, price);
            products.add(product);
        }
        Gson gson = new Gson();
        String jsonData = gson.toJson(products);
        return jsonData;

    }
    public Product Productoss() {
    	String sql= "select * from productos";
        rs = stmt.executeQuery();
        while (rs.next()) {
            // Obtén los datos de cada columna
            int id = rs.getInt("id");
            String name = rs.getString("nombre");
            double price = rs.getDouble("precio");

            // Crea un objeto Product y añádelo a la lista
            Product product = new Product(id, name, price);
            products.add(product);
        }
        Gson gson = new Gson();
        String jsonData = gson.toJson(products);
        return products.get(0);

    }
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Define the path to the HTML file
    	
    	String idParam = request.getParameter("id");
    	
    	if(idParam == null) {
    		idParam = "0";
    	}
    	
    	if(idParam == "0") {
        // Set the content type to text/html
        response.setContentType("text/html");
        
        // Read the HTML file and write it to the response
        try (FileInputStream fis = new FileInputStream(new File(filePath))) {
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = fis.read(buffer)) != -1) {
                response.getOutputStream().write(buffer, 0, bytesRead);
            }
        }
    	}
    	else {
        response.setCharacterEncoding("UTF-8");

        response.getWriter().write(Productoss().getTitle());
    	}
    }
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		
	}

}